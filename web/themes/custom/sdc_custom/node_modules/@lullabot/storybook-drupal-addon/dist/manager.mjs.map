{"version":3,"sources":["../src/manager.ts","../src/constants.ts","../src/Tool.tsx"],"names":["addons","types","ADDON_ID","TOOL_ID","EVENT_NAME","React","useGlobals","IconButton","TooltipLinkList","WithTooltip","getValue","value","getDrupalThemes","themes","theme","onSelect","key","Tool","drupalTheme","supportedDrupalThemes","updateGlobals","onHide","selected","viewMode"],"mappings":"AAAA,OAAS,UAAAA,EAAQ,SAAAC,MAAa,yBCAvB,IAAMC,EAAW,yBACXC,EAAU,GAAGD,SACbE,EAAa,gBCF1B,OAAOC,MAA6B,QACpC,OAAS,cAAAC,MAAkB,yBAC3B,OACE,cAAAC,EACA,mBAAAC,EACA,eAAAC,MACK,wBAEP,OAAQ,UAAAT,MAAa,yBAYrB,IAAMU,EAAYC,GACZ,OAAOA,GAAU,SACZ,CAAE,MAAOA,CAAM,EAEjB,CACL,MAAOA,EAAM,OAAS,EACxB,EAGIC,EAAkB,CACtBC,EACAC,EACAC,IAEAF,EACI,OAAO,QAAQA,CAAM,EAAE,IAAI,CAAC,CAACG,EAAKL,CAAK,KAAO,CAC5C,GAAGD,EAASC,CAAK,EACjB,GAAIK,EACJ,OAAQA,IAAQF,EAChB,QAAS,IAAMC,EAASC,CAAG,CAC7B,EAAE,EACF,CACE,CACE,GAAI,OACJ,MAAO,0BACP,OAAQ,GACR,QAAS,IAAM,CAAC,CAClB,CACF,EAEOC,EAAO,IAAoB,CACtC,GAAM,CAAC,CAAE,YAAAC,EAAa,sBAAAC,CAAsB,EAAGC,CAAa,EAAId,EAAW,EAE3E,OACED,EAAA,cAACI,EAAA,CACC,UAAU,MACV,QAAQ,QACR,QAAS,CAAC,CAAE,OAAAY,CAAO,IACjBhB,EAAA,cAACG,EAAA,CACC,MAAOI,EACLO,EACAD,EACCI,GAAa,CACRA,IAAaJ,IACfE,EAAc,CAAE,YAAaE,CAAS,CAAC,EACvCtB,EAAO,WAAW,EAAE,KAAKI,EAAYkB,CAAQ,GAE/CD,EAAO,CACT,CACF,EACF,GAGFhB,EAAA,cAACE,EAAA,CACC,IAAKJ,EACL,OAAQe,EACR,MAAM,uBACP,wBAED,CACF,CAEJ,EF5EAlB,EAAO,SAASE,EAAU,IAAM,CAE9BF,EAAO,IAAIG,EAAS,CAClB,KAAMF,EAAM,KACZ,MAAO,eACP,MAAO,CAAC,CAAE,SAAAsB,CAAS,IAAM,CAAC,EAAEA,GAAYA,EAAS,MAAM,gBAAgB,GACvE,OAAQN,CACV,CAAC,CACH,CAAC","sourcesContent":["import { addons, types } from '@storybook/manager-api';\n\nimport { ADDON_ID, TOOL_ID } from './constants';\nimport { Tool } from './Tool';\n\n// Register the addon\naddons.register(ADDON_ID, () => {\n  // Register the tool\n  addons.add(TOOL_ID, {\n    type: types.TOOL,\n    title: 'Drupal Theme',\n    match: ({ viewMode }) => !!(viewMode && viewMode.match(/^(story|docs)$/)),\n    render: Tool,\n  });\n});\n","export const ADDON_ID = 'storybook/drupal-addon';\nexport const TOOL_ID = `${ADDON_ID}/tool`;\nexport const EVENT_NAME = 'THEME_CHANGED';\n","import React, { ReactElement } from 'react';\nimport { useGlobals } from '@storybook/manager-api';\nimport {\n  IconButton,\n  TooltipLinkList,\n  WithTooltip,\n} from '@storybook/components';\nimport { EVENT_NAME, TOOL_ID } from './constants';\nimport {addons} from '@storybook/preview-api';\n\nexport interface Link {\n  id: string;\n  active: boolean;\n  title: string;\n  onClick: () => void\n}\n\ntype ExpandedThemeValue = { title: string };\nexport type ThemeValue = string | ExpandedThemeValue;\n\nconst getValue = (value: ThemeValue): ExpandedThemeValue => {\n  if (typeof value === 'string') {\n    return { title: value };\n  }\n  return {\n    title: value.title || '',\n  };\n};\n\nconst getDrupalThemes = (\n  themes: Record<string, ThemeValue>,\n  theme: string,\n  onSelect: (selected: string) => void,\n): Link[] =>\n  themes\n    ? Object.entries(themes).map(([key, value]) => ({\n        ...getValue(value),\n        id: key,\n        active: key === theme,\n        onClick: () => onSelect(key),\n      }))\n    : [\n        {\n          id: 'none',\n          title: 'No themes in parameters',\n          active: true,\n          onClick: () => {},\n        },\n      ];\n\nexport const Tool = (): ReactElement => {\n  const [{ drupalTheme, supportedDrupalThemes }, updateGlobals] = useGlobals();\n\n  return (\n    <WithTooltip\n      placement=\"top\"\n      trigger=\"click\"\n      tooltip={({ onHide }) => (\n        <TooltipLinkList\n          links={getDrupalThemes(\n            supportedDrupalThemes,\n            drupalTheme,\n            (selected) => {\n              if (selected !== drupalTheme) {\n                updateGlobals({ drupalTheme: selected });\n                addons.getChannel().emit(EVENT_NAME, selected);\n              }\n              onHide();\n            },\n          )}\n        />\n      )}\n    >\n      <IconButton\n        key={TOOL_ID}\n        active={drupalTheme}\n        title=\"Select Drupal Theme\"\n      >\n        ðŸ’§ Drupal Theme\n      </IconButton>\n    </WithTooltip>\n  );\n};\n"]}